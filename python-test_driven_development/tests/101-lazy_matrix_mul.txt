===========================
How to Use 101-lazy_matrix_mul.py
===========================

This module defines a matrix multiplication function ``lazy_matrix_mul(m_a, m_b)``
that uses NumPy.

Usage
=====

Normal Cases:
------------

::

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]]))
    [[19, 22], [43, 50]]

::

    >>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
    [[13, 16]]

Error Cases:
-----------

Invalid Types:
::

    >>> print(lazy_matrix_mul("Holberton", [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], "Holberton"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

Empty Matrices:
::

    >>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

::

    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

Invalid Elements:
::

    >>> print(lazy_matrix_mul([[5, "6"], [7, 8]], [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

::

    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

Invalid Shapes:
::

    >>> print(lazy_matrix_mul([[5, 6, 10], [7, 8]], [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

::

    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[5, 6, 1], [7, 8]]))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

::

    >>> print(lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied 