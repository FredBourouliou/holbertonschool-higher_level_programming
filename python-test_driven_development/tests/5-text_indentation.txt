===========================
How to Use 5-text_indentation.py
===========================

This module defines a function ``text_indentation(text)`` that prints a text with
2 new lines after each of these characters: ., ? and :

Usage
=====

Text is printed with 2 new lines after each ., ? and : character:

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello. World? Yes: No.")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>
    Yes:
    <BLANKLINE>
    No.
    <BLANKLINE>

No spaces are printed at the beginning or end of lines:

::

    >>> text_indentation("   Hi there.   How are you?   ")
    Hi there.
    <BLANKLINE>
    How are you?
    <BLANKLINE>

Special characters can be consecutive:

::

    >>> text_indentation("Hello.: World")
    Hello.
    <BLANKLINE>
    :
    <BLANKLINE>
    World

Single character test:

::

    >>> text_indentation(".")
    .
    <BLANKLINE>

Empty string test:

::

    >>> text_indentation("")

No special characters test:

::

    >>> text_indentation("Hello World")
    Hello World

Error Handling
=============

The function raises TypeError if text is not a string:

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(123)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(["Hello", "World"])
    Traceback (most recent call last):
    TypeError: text must be a string
