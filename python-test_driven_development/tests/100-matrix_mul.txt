===========================
How to Use 100-matrix_mul.py
===========================

This module defines a matrix multiplication function ``matrix_mul(m_a, m_b)``.

Usage
=====

Normal Cases:
------------

::

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> print(matrix_mul(m_a, m_b))
    [[7, 10], [15, 22]]

::

    >>> m_a = [[1, 2]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> print(matrix_mul(m_a, m_b))
    [[13, 16]]

Error Cases:
-----------

Missing Arguments:
::

    >>> print(matrix_mul()) # doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Invalid Types:
::

    >>> print(matrix_mul("not a list", [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> print(matrix_mul([[1, 2]], "not a list"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

::

    >>> print(matrix_mul([1, 2, 3], [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

::

    >>> print(matrix_mul([[1, 2]], [1, 2, 3]))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

Empty Matrices:
::

    >>> print(matrix_mul([], [[1, 2]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

::

    >>> print(matrix_mul([[1, 2]], []))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

Invalid Elements:
::

    >>> print(matrix_mul([[1, "2"]], [[3, 4]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

::

    >>> print(matrix_mul([[1, 2]], [[3, "4"]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

Invalid Shapes:
::

    >>> print(matrix_mul([[1, 2], [3, 4, 5]], [[1, 2]]))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

::

    >>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6, 7]]))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

::

    >>> print(matrix_mul([[1, 2, 3]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
